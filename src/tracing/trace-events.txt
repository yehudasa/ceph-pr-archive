first_tp(int num) "This is the number: %d" 1
second_tp(int num, char *s) "This is num char: %d and this is the string: %s" 0
log_message(char *text) "This is the log message string: %s" 2
some_event(int payload) "payload %d" 3
process_protrusive_extents_lookup_offset(int lookup_start_offset, int lookup_end_offset) "(hex): [%x, %x]" 3
process_protrusive_extents_alloc(uint64_t alloc_unit_start, long alloc_unit_end) "%llu alloc_units: %llu..%llu" 3
proc_replica_log(pg_shard_t from, pg_info_t oinfo, pg_log_t olog, pg_missing_t omissing) "proc_replica_log for osd. from: %s %s %s %s" 3
proc_replica_info_got_osd(pg_shard_t from, pg_info_t oinfo) "got osd. %s from %s" 2
gc_process_protrusive_extents_expected(uint64_t alloc_unit_start) "process_protrusive_extents --expected %llu" 30
gc_process_protrusive_extents_expected_allocations(int64_t expected_allocations, uint64_t alloc_unit_end) "expected_allocations=%llu end_au: %llu" 30
gc_process_protrusive_extents_affected_blob(Blob blob, uint64_t length, uint64_t referenced_bytes) "affected_blob: %s unref 0x%x referenced = 0x%x" 30
gc_process_protrusive_extents_expected_allocations_start(uint64_t alloc_unit_start) "--expected_allocations: %llu" 30
gc_process_protrusive_extents_expected4release(Blob blob, int64_t blob_expected_for_release, int64_t expected_allocations) "%s expected4release=%llu expected_allocations=%llu" 30
gc_estimate_affected_blob(Blob blob, uint64_t logical_offset, int64_t length) "affected_blob: %s unref 0x%x - %llu" 30
gc_estimate_range(uint64_t gc_start_offset, uint64_t gc_end_offset) "gc range(hex): [%x, %x)" 30
cache_trim_target(byte_u_t target_bytes, float target_meta_ratio, float target_data_ratio, byte_u_t target_meta, byte_u_t target_buffer, byte_u_t current, byte_u_t current_meta, byte_u_t current_buffer) "shard target %s meta/data ratios %f + %s (%s + %s), current %s (%s + %s)" 30
cache_trim_shard_target(byte_u_t target_bytes, float target_meta_ratio, byte_u_t target_meta, byte_u_t target_buffer, byte_u_t current, byte_u_t current_meta, byte_u_t current_buffer, byte_u_t need_to_free, byte_u_t free_meta, byte_u_t free_buffer) "shard target %s ratio %s (%s + %s), current %s (%s + %s), need_to_free (%s + %s) -> MISSING INFO" 20
tick_without_osd_lock(int i) "tick_without_osd_lock" 10
bluestore_read_inject_random_eio(int i) ": inject random EIOD" 1
kv_sync_releasing_old_bluefs(byte_u_t bluefs_extents_reclaiming) " releasing old bluefs 0x%s" 0
bluestore_mkfs(int success) " success (%d)" 0
bluestore_queue_transactions_blackhole(int i) "objectstore_blackhole = TRUE, dropping transaction" 0
bluefs_balance_freespace_no_allocate(uint64_t gift, uint64_t min_alloc_size) "no allocate on 0x%x min_alloc_size 0x%x" 0
bluefs_balance_freespace_insufficient_allocate(uint64_t gift, uint64_t min_alloc_size, int64_t alloc_len) "insufficient allocate on 0x%x min_alloc_size 0x%x allocated 0x%x" 0
bluefs_balance_freespace_gifting_to_bluefs(bluestore_pextent_t extent) "gifting %s to bluefs" 1
bs_setup_block_symlink_created(string name, string epath) "created %s symlink to %s" 1
bs_setup_block_symlink_resized(string name, byte_u_t size) "resized %s file to %s" 1
bluestore_mkfs_create(string path) "path %s" 1
bluestore_mkfs_create_already_created(string path) "already created %s" 1
bluestore_mkfs_create_using_fsid(uuid fsid, int generated) "fsid %s, generated = %d" 1
bluestore_mount_path(string path) "path %s" 1
bluestore_unmount(int i) "bluestore unmount" 1
bluestore_upgrade_super_start(int32_t ondisk_format, int32_t latest_ondisk_format) "from %d, latest %d" 1
bluestore_upgrade_super_done(int i) "done" 1
bluestore_disable_cache_kv(double cache_kv_min_ratio, float cache_kv_ratio) "kv_min_ratio %f > kv_ratio %f" 1
bluestore_show_cache_sizes(uint64_t cache_size, float cache_meta_ratio, float cache_kv_ratio, float cache_data_ratio) "cache_size %llu meta %f kv %f data %f" 1
bluestore_disable_bluefs_min(byte_u_t dev_size) "main device size %s is too small, disable bluestore_bluefs_min for now" 1
bluestore_open_fm_pre_fragmenting(float debug_prefill, int prefragment_max) "pre-fragmenting freespace, using %f with max free extent %d" 1
bluestore_opening_allocation_metadata(int i) "opening allocation metadata" 1
bluestore_open_alloc_loaded_extents(byte_u_t bytes, uint64_t num_extents) "loaded %s in %llu extents" 1
bluestore_open_db(string kv_backend, string fn, string options) "opened %s path %s options %s" 1
bluestore_fsck_walking_object_keyspace(int i) "walking object keyspace" 1
bluestore_fsck_checking_shared_blobs(int i) "checking shared_blobs" 1
bluestore_fsck_sorting_out_misreferenced_extents(int i) "sorting out misreferenced extents" 1
bluestore_fsck_checking_for_stray_omap_data(int i) "checking for stray omap data" 1
bluestore_fsck_checking_deferred_events(int i) "checking deferred events" 1
bluestore_fsck_checking_freelist_vs_allocated(int i) "checking freelist vs allocated" 1
bluestore_fsck_finish(int errors, unsigned repaired, int remaining, utime_t seconds) "<<<FINISH>>> with %d errors, %u repared, %d remaining in %s seconds" 1
bluestore_txc_applied_kv(string onode, int flushing_count) "onode %s had %d" 20
bluestore_kv_sync_thread_start(int i) "kv_sync_thread start" 20
bluestore_kv_sync_thread_new_nid_max(int new_nid_max) "new_nid_max %llu" 10
bluestore_kv_sync_thread_new_blobid_max(int new_blobid_max) "new_blobid_max %llu" 10
bluestore_kv_sync_thread_nid_max_now(int nid_max_now) "nid_max now %llu" 10
bluestore_kv_sync_thread_blobid_max_now(int blobid_max_now) "blobid_max now %llu" 10
bluestore_kv_sync_thread_finish(int i) "kv_sync_thread finish" 10

bluestore_kv_finalize_thread_start(int i) "kv_finalize_thread start" 10
bluestore_kv_finalize_thread_sleep(int i) "kv_finalize_thread sleep" 10
bluestore_kv_finalize_thread_wake(int i) "kv_finalize_thread wake" 10
bluestore_kv_finalize_thread_finish(int i) "kv_finalize_thread finish" 10

bluestore_txc_aio_submit(void *txc) "txc %s" 10

bluestore_txc_add_transaction_coll_hint_noop(uint32_t pg_num, uint64_t num_objs) "collection hint objects is a no-op, pg_num %u num_objects %llu" 10
bluestore_txc_add_transaction_coll_unknown_hint(uint32_t hint) "unknown collection hint %u" 10
bluestore_txc_state_proc_name(void *txc, string state_name) "txc %s %s" 10

bluestore_onodespace_clear(int i) "bluestore.onodespace clear %d" 10
bluestore_do_write_small(uint64_t offset, uint64_t length) "0x%x~%x" 10
bluestore_do_write_big(uint64_t offset, uint64_t length, uint64_t target_blob_size, int compress) "0x%x~%x target_blob_size 0x%x compress %d" 10

bluestore_deferred_aio_finish(void *osr) "bluestore.deferred_aio_finish osr %s" 10

bluestore_deferred_replay_start(int i) "bluestore.deferred_replay start %d" 10
bluestore_deferred_replay_completed(int events) "bluestore.deferred_replay completed %d events" 10
bluestore_queue_transactions(void *c, collectionid cid) "queue_transactions ch %s %s" 10

bluestore_txc_calc_cost(void *txc, uint64_t txc_cost, uint64_t ios, uint64_t cost, uint64_t txc_bytes) "bluestore._txc_calc_cost %s cost %llu (%llu * %llu + %llu bytes)" 10

bluestore_write(collectionid cid, ghobject_t oid, uint64_t offset, size_t length, int r) "bluestore._write %s %s 0x%x~%x = %d" 10

bluestore_omap_setkeys(collection cid, ghobject_t oid, int r) "bluestore._omap_setkeys %s %s = %d" 10
bluestore_deferred_submit_unlock(void *osr, size_t iomap_size) "osr %s %u ios pending" 10
bluestore_setattrs(collectionid cid, ghobject_t oid, size_t size, int r) "bluestore._setattrs %s %s %u keys = %d" 10
bluestore_read(collectionid cid, ghobject_t oid, uint64_t offset, size_t length, int r) "bluestore._read %s %s 0x%x~%x = %d" 10

bluestore_txc_release_alloc_queued(void *txc, string released) "(queued) %s %s" 10
bluestore_txc_release_alloc_sync(void *txc, string released) "(sync) %s %s" 10
bluestore_osr_register_zombie(void *osr) "%s" 10
bluestore_osr_drain_preceding(void *txc, void *osr) "%s osr %s" 10
bluestore_osr_drain_preceding_done(void *osr) "%s done" 10
bluestore_extentmap_reshard(uint32_t needs_reshard_begin, uint32_t needs_reshard_end, size_t extent_map_shards_size, ghobject_t oid) "0x[%x,%x) of %d shards on %s" 10
